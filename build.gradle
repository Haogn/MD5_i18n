plugins {
  id 'java'
  id 'war'
}

group 'com'
version '1.0-SNAPSHOT'

repositories {
  mavenCentral()
}

ext {
  junitVersion = '5.9.2'
}

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
}

dependencies {
  compileOnly('javax.servlet:javax.servlet-api:4.0.1')

  // spring-frameword
  // https://mvnrepository.com/artifact/org.springframework/spring-webmvc
  implementation group: 'org.springframework', name: 'spring-webmvc', version: '5.3.18'

// mySQL connection
  // https://mvnrepository.com/artifact/mysql/mysql-connector-java
  implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.28'

// thymeleaf
  // https://mvnrepository.com/artifact/org.thymeleaf/thymeleaf-spring5
  implementation group: 'org.thymeleaf', name: 'thymeleaf-spring5', version: '3.0.11.RELEASE'

// mã hoá mật khẩu
  // https://mvnrepository.com/artifact/org.mindrot/jbcrypt
  implementation group: 'org.mindrot', name: 'jbcrypt', version: '0.4'

// commons-io
  // https://mvnrepository.com/artifact/commons-io/commons-io
  implementation group: 'commons-io', name: 'commons-io', version: '2.11.0'

// common-fileupload
  // https://mvnrepository.com/artifact/commons-fileupload/commons-fileupload
  implementation group: 'commons-fileupload', name: 'commons-fileupload', version: '1.5'

// spring-orm
  // https://mvnrepository.com/artifact/org.springframework/spring-orm
  implementation group: 'org.springframework', name: 'spring-orm', version: '5.3.18'

// hibernate core
  // https://mvnrepository.com/artifact/org.hibernate/hibernate-core
  implementation group: 'org.hibernate', name: 'hibernate-core', version: '5.6.15.Final'

// hibernata entitymanagement
  // https://mvnrepository.com/artifact/org.hibernate/hibernate-entitymanager
  implementation group: 'org.hibernate', name: 'hibernate-entitymanager', version: '5.6.14.Final'

  // lombok
  implementation 'org.projectlombok:lombok:1.18.22'
  annotationProcessor 'org.projectlombok:lombok:1.18.22'
  testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
  testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

test {
useJUnitPlatform()}